trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  DOCKER_USERNAME: $(DockerUsername)
  DOCKER_PASSWORD: $(DockerPassword)
  IMAGE_NAME: "sanchit"
  IMAGE_TAG: "latest"

stages:
- stage: PipelineContainerUpdate
  displayName: Updating Container
  jobs:
  - job: UpdateContainer
    displayName: Updating
    steps:
    - script: |
        echo "Updating Container"
        sudo apt update
      displayName: Updating Container
  - job: UpgradingContainer
    displayName: Upgrading
    steps:
    - script: |
        echo "Upgrading Container"
        sudo apt update
      displayName: Upgrading Container
      
- stage: BuildAndPushImage
  displayName: 'Build and Push Docker Image'
  jobs:
    - job: BuildDockerImage
      displayName: 'Build , Scan & Push Docker Image'
      steps:
        - script: |
            echo "Logging in to Docker Hub..."
            echo $(dockerPassword) | docker login -u $(dockerUsername) --password-stdin
          displayName: 'Logging into Container Registries'

        - script: |  
            docker build . -t "$(DOCKER_USERNAME)/$(IMAGE_NAME):$(IMAGE_TAG)"
          displayName: 'Building Docker Image'

        - script: | 
            curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh -o install-scout.sh
            sh install-scout.sh
            docker scout cves \
              --format only-packages \
              --only-vuln-packages \
              --output $(Build.ArtifactStagingDirectory)/docker_scout_report.json \
              "$(DOCKER_USERNAME)/$(IMAGE_NAME):$(IMAGE_TAG)"
          displayName: 'Installing Docker Scout & Scanning Image'
            
        - script: |
            docker push "$(DOCKER_USERNAME)/$(IMAGE_NAME):$(IMAGE_TAG)"
          displayName: 'Pushing the image to ACR'

        - publish: $(Build.ArtifactStagingDirectory)/docker_scout_report.json
          artifact: docker_scout_report    
          displayName: 'Publish Docker Scout Report'


- stage: SonarScan
  displayName: Sonar Scan
  jobs:
  - job: InstallSonar
    displayName: Installing Sonar Scanner
    steps:
    - script: |
        echo "Installing Sonar Scanner"
        sudo apt update
        sudo apt install openjdk-11-jre -y

        curl -sS https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip -o sonar-scanner.zip
        unzip sonar-scanner.zip
        sudo mv sonar-scanner-*/ /opt/sonar-scanner

        # Set environment variables for Sonar Scanner
        echo "export SONAR_SCANNER_HOME=/opt/sonar-scanner" >> ~/.bashrc
        echo "export PATH=\$PATH:\$SONAR_SCANNER_HOME/bin" >> ~/.bashrc
        source ~/.bashrc

        echo "Sonar Scanner installed successfully"
      displayName: Installing Sonar Scanner

  - job: ScanWithSonar
    displayName: Running SonarQube Scan
    steps:
    - script: |
        echo "Running Sonar Scanner"
        
        # Ensure environment variables are sourced for the current shell
        source ~/.bashrc
        
        sonar-scanner \
          -Dsonar.projectKey=Sansitor_node-hello_AZXmO5jR16Bxdig4f5oU \
          -Dsonar.sources=. \
          -Dsonar.host.url=http://128.24.102.209:9000/ \
          -Dsonar.login=sqp_00bfc5edbc114030be07515080b2bba0ccde3655
      displayName: Running Sonar Scanner
